replicaCount: 2

metadata:
 name: bookingsvc 
 label: bookingsvc

readinessProbe:
  path: /healthz
  port: 3000
  initialDelaySeconds: 10
  timeoutSeconds: 2
  periodSeconds: 10

livenessProbe:
  path: /healthz
  port: 3000
  initialDelaySeconds: 10
  timeoutSeconds: 2
  periodSeconds: 10

hpa:
  metadata:
    name: bookingmicroservicehpa
  spec:
    maxReplicas: 10
    minReplicas: 2
  metrics:
    pods:
      targetAverageValue: 30
    resource:
      name: cpu
      targetAverageUtilization: 50
    memory:
      targetAverageUtilization: 50
  scaleTargetRef:  
    name: bookingsvc


image:
  name: bookingsvc
  imageName: "mycluster.icp:8500/default/booking-microservice" 
  imagePullPolicy: Always
  ports:
    containerPort: 3000
  requests:
    cpu: "120m"
    memory: "150Mi"
  limits:
    cpu: "150m"
    memory: "200Mi"
  maxSurge: 1
  maxUnavailable: 0
  lifecycle:
    preStop:
      command: ["/bin/bash", "-c", "sleep 20"]
    
envOfSecrets:
  envUID:
    name: UIDMARIADB
    secretKeyRef:
      name: mysecret
      key: UIDMARIADB
  envPASSWORD:
    name: PASSWORDMARIADB
    secretKeyRef:
      name: mysecret
      key: PASSWORDMARIADB
  envSECRET:
    name: SECRET
    secretKeyRef:
      name: mysecret
      key: SECRET

envOfConfigmaps:
  envDATABASE:
    name: DATABASEMARIADB
    configMapKeyRef:
      name: env-database
      key: DATABASEMARIADB
  envPORT:
    name: PORTMARIADB
    configMapKeyRef:
      name: env-database
      key: PORTMARIADB
  envHOSTNAME:
    name: HOSTNAMEMARIADB
    configMapKeyRef:
      name: env-database
      key: HOSTNAMEMARIADB
  envPROTOCOL:
    name: PROTOCOLMARIADB
    configMapKeyRef:
      name: env-database
      key: PROTOCOLMARIADB


service:
  serviceMetadata:
    name: bookingsvc
    labels:
      app: bookingsvc
  selector:
    selectorName: bookingsvc
  servicePortConfiguration:
    protocol: TCP
    name: bookingsvc
    type: ClusterIP
    port: 3000
    targetPort: 3000
